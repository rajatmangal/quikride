<%- include ('partials/header') %>
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 90vh;
        }
        #posts {
            height: 90vh;
            overflow: scroll;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
    <div class="row">
        <div class="col-sm-12 mt-3 mb-3">
            <form class="form-inline" action="/" method="GET">
                <label class="mr-2 ml-2"><strong>Search For Ride</strong></label>
                <input class="form-control mb-2 mr-sm-2" placeholder="From" type="text" id="pickUp">
                <input class="form-control mb-2 mr-sm-2" placeholder="To" type="text" id="dropOff">
                <!-- <input class="form-control mb-2 mr-sm-2" placeholder="Time (Optional)" type="datetime-local" name="time"> -->
                <input type="hidden" name="pickupLocationLat" id="pickUpLocationLat">
                <input type="hidden" name="pickupLocationLng" id="pickUpLocationLng">
                <input type="hidden" name="dropoffLocationLat" id="dropOffLocationLat">
                <input type="hidden" name="dropoffLocationLng" id="dropOffLocationLng">
                <button type="submit" class="btn btn-primary mb-2">Search</button>
                <% if (req.query.pickupLocationLat) { %>
                    <button type="submit" class="btn ml-3 btn-outline-secondary mb-2">Clear</button>
                <% } %>
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div id="posts">
                <% for(var i=0; i<posts.length; i++) {%>
                    <div class="card posts-cards" onclick="updateMarkers(<%= posts[i].pickUpPoint.coordinates[1] %>,<%= posts[i].pickUpPoint.coordinates[0] %>, 
                    <%= posts[i].dropOffPoint.coordinates[1] %>,<%= posts[i].dropOffPoint.coordinates[0] %>)">
                        <h5 class="card-header"><%= posts[i].username %></h5>
                        <div class="card-body">
                        <h5 class="card-title"><%= posts[i].usermessage %></h5>
                        <p class="card-text">
                            Pick Up Location: <%= posts[i].pickUp %>
                            <br>
                            Drop Off Location: <%= posts[i].dropOff %>
                        </p>
                        <a href="/chat/<%= posts[i].userId %>"  class="btn btn-primary">Chat</a>
                        <a href="/chat/<%= posts[i].userId %>"  class="btn btn-primary">Request Ride</a>
                        </div>
                    </div>
                <% } %>
                <% if(posts.length == 0) { %>
                    <div>
                        There are no posts available.
                    </div>
                <% } %>
            </div>
        </div>
        <div class="col-lg-8">
            <div id="map"></div>
        </div>
    </div>
    <script>
        var map;
        var pickUpMarker;
        var dropOffMarker;

        function updateMarkers(pickUpLat, pickUpLng, dropOffLat, dropOffLng) {
            var pickUpPosition = {lat: parseFloat(pickUpLat), lng: parseFloat(pickUpLng)};
            var dropOffPosition = {lat: parseFloat(dropOffLat), lng: parseFloat(dropOffLng)};
            pickUpMarker.setPosition(pickUpPosition);
            dropOffMarker.setPosition(dropOffPosition);
            var bounds = new google.maps.LatLngBounds();
            bounds.extend(pickUpMarker.position);
            bounds.extend(dropOffMarker.position);
            map.fitBounds(bounds);
        }
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 49.17, lng: -122.87},
            zoom: 12
            });
            infoWindow = new google.maps.InfoWindow;

            // markers will be added in the future from database
            var myLatLng = {lat: 49.17, lng: -122.87};

            pickUpMarker = new google.maps.Marker({
                //position: myLatLng,
                map: map,
                title: 'Pickup',
                icon: {
                    url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"
                }
            });

            dropOffMarker = new google.maps.Marker({
                position: myLatLng,
                map: map,
                title: 'Dropoff',
                icon: {
                    url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
                }
            });

            // Try HTML5 geolocation.
            if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var pos = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
                };
                map.setCenter(pos);
            }, function() {
                handleLocationError(true, infoWindow, map.getCenter());
            });
            } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
            }
            function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                infoWindow.setPosition(pos);
                infoWindow.setContent(browserHasGeolocation ?
                                    'Error: The Geolocation service failed.' :
                                    'Error: Your browser doesn\'t support geolocation.');
                infoWindow.open(map);
            }

            <% if (posts.length > 0) { %>
            updateMarkers(<%= posts[0].pickUpPoint.coordinates[1] %>,<%= posts[0].pickUpPoint.coordinates[0] %>, 
                    <%= posts[0].dropOffPoint.coordinates[1] %>,<%= posts[0].dropOffPoint.coordinates[0] %>);
            <% } %>

          //To turn google place api on, replace the API key at the bottom and uncomment these 2 lines
          var pickup = document.getElementById('pickUp');
          var dropoff = document.getElementById('dropOff');
  
          var autocomplete = new google.maps.places.Autocomplete(pickup);
          var autocomplete2 = new google.maps.places.Autocomplete(dropoff);
  
          // Bind the map's bounds (viewport) property to the autocomplete object,
          // so that the autocomplete requests use the current map bounds for the
          // bounds option in the request.
  
          // Set the data fields to return when the user selects a place.
          autocomplete.setFields(
              ['address_components', 'geometry', 'icon', 'name']);
  
          autocomplete.addListener('place_changed', function() {

            var place = autocomplete.getPlace();
            if (!place.geometry) {
              window.alert("No details available for input: '" + place.name + "'");
              return;
            } else {
              document.getElementById('pickUpLocationLat').value = place.geometry.location.lat();
              document.getElementById('pickUpLocationLng').value = place.geometry.location.lng();
            }
            
          });
          autocomplete2.setFields(
              ['address_components', 'geometry', 'icon', 'name']);
  
          autocomplete2.addListener('place_changed', function() {

            var place = autocomplete2.getPlace();
            if (!place.geometry) {
              window.alert("No details available for input: '" + place.name + "'");
              return;
            } else {
              document.getElementById('dropOffLocationLat').value = place.geometry.location.lat();
              document.getElementById('dropOffLocationLng').value = place.geometry.location.lng();
            }
            
          });

        }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCESc_JeBGh3Hw1N-b-vhn0xJ83_QzVhno&libraries=places&callback=initMap"
        async defer></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment-with-locales.min.js"></script>
    <script src="/js/io.js"></script>
<%- include ('partials/footer') %>